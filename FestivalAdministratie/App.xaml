<Application x:Class="FestivalAdministratie.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="View/OnFirstStartScreen.xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d1p1:Ignorable="d"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xwpftheme="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MetroWPF;component/Themes/Light.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MetroWPF;component/Themes/ControlStyles.xaml" />
                <ResourceDictionary>
                    
                    
                    
                    
          <!--colors-->
		  <Color x:Key="MyLightBlueColor" A="255" R="76" G="172" B="191"/>
		   <Color x:Key="MyDarkBlueColor" A="255" R="84" G="140" B="165"/>
		   <Color x:Key="MyBlackColor" A="255"  R="25" G="25" B="25"/>
                    <SolidColorBrush Color="{StaticResource MyLightBlueColor}" x:Key="MyLightBlue" />
                    <SolidColorBrush Color="{StaticResource MyDarkBlueColor}" x:Key="MyDarkBlue" />
                    <SolidColorBrush Color="{StaticResource MyBlackColor}" x:Key="MyBlack"/>

                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource MyLightBlueColor}"/>

                    <Style TargetType="{x:Type Control}" x:Key="baseStyle">
                        <Setter Property="FontSize" Value="14" />
                    </Style>
                    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource baseStyle}">

          </Style>
          <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource baseStyle}">
          </Style>
          <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource baseStyle}">
          </Style>
          <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize" Value="14"/>
                    </Style>


                    <Storyboard x:Key="MouseOverButtonBoardEnter">
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MyDarkBlueColor}"/>
                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="{StaticResource MyLightBlueColor}"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>

                    <Storyboard x:Key="MouseOverButtonBoardExit">
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MyLightBlueColor}"/>
                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="{StaticResource MyDarkBlueColor}"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                    <Style x:Key="ExplicitButtonStyle" TargetType="Button" BasedOn="{StaticResource baseStyle}">
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Background" Value="{StaticResource MyDarkBlue}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border  CornerRadius="0.8" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverButtonBoardEnter}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverButtonBoardExit}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverButtonBoardEnter}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverButtonBoardExit}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ExplicitButtonStyle}">
                        
                    </Style>

                    <Style TargetType="ComboBoxItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource MyLightBlue}" />
                                <Setter Property="Foreground"  Value="{StaticResource MyBlack}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Background" Value="{StaticResource MyLightBlue}" />
                                <Setter Property="Foreground"  Value="{StaticResource MyBlack}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style TargetType="ListBoxItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource MyDarkBlue}" />
                                <Setter Property="Foreground"  Value="{StaticResource MyBlack}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Background" Value="{StaticResource MyDarkBlue}" />
                                <Setter Property="Foreground"  Value="{StaticResource MyBlack}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{StaticResource MyLightBlue}" />
                                <Setter Property="Foreground"  Value="{StaticResource MyBlack}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                    <Storyboard x:Key="OnMouseEnter1">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="360">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="OnMouseLeave1">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <ControlTemplate x:Key="GearButtonTemplate" TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/FestivalAdministratie;component/Assets/Gear icon pressed.png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                 


                </ResourceDictionary>
      </ResourceDictionary.MergedDictionaries>
      <!--<vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:FestivalAdministratie.ViewModel" />-->
    </ResourceDictionary>
  </Application.Resources>
</Application>